{"version":3,"sources":["./src/app/rent/rent.component.ts","./src/app/rent/rent.component.html","./src/app/rent/rent.module.ts","./src/app/shared/dialogs/brix-contract-approval-dialog/brix-contract-approval-dialog.component.ts","./src/app/shared/dialogs/brix-contract-approval-dialog/brix-contract-approval-dialog.component.html","./src/app/shared/dialogs/brix-contract-approval-dialog/brix-contract-approval-dialog.module.ts"],"names":[],"mappings":"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","file":"rent-rent-module-es2015.js","sourcesContent":["// @ts-nocheck\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BrixContractApprovalDialogComponent } from '../shared/dialogs/brix-contract-approval-dialog/brix-contract-approval-dialog.component';\r\nimport { SmartContractCoreService } from '../shared/services/smart-contract-core.service';\r\nimport { EventMessengerService } from '../shared/services/event-messenger.service';\r\nimport { environment } from '../../environments/environment';\r\nimport { PropertyBinding } from 'three';\r\n\r\n@Component({\r\n  selector: 'app-rent',\r\n  templateUrl: './rent.component.html',\r\n  styleUrls: ['./rent.component.scss']\r\n})\r\nexport class RentComponent {\r\n  public streetViewToggled = true;\r\n  public districtViewToggled = true;\r\n  public cityViewToggled = true;\r\n  public brixClaimLoading = false;\r\n  public brixTokenApproved = true; // Need to dynamically set this based on smart contract\r\n  public propertys = []; // Breakdown of the streets\r\n\r\n  public accounts = [];\r\n\r\n  // Countdown\r\n  public countdownTimer;\r\n  public countdownHours: any = 0;\r\n  public countdownMins: any = 0;\r\n  public countdownSecs: any = 0;\r\n\r\n  constructor(\r\n    public smartContractCoreService: SmartContractCoreService,\r\n    public eventMessengerService: EventMessengerService,\r\n    private _dialog: MatDialog,\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n        // Initialize the countdown\r\n    this.countdownTimer = setInterval(() => {\r\n\t\t\tthis.updateCountdownTimer();\r\n\t\t}, 1000);\r\n\t\tthis.updateCountdownTimer();\r\n\r\n    \r\n\r\n\r\n     // Startup: Check metamask and populate accounts and then determine if any unis are in wallet\r\n     await this.checkMetaMaskInstalled();\r\n\r\n     // Make sure we're on the right chain\r\n     await this.checkChain();\r\n \r\n \r\n     // Handle events when wallet accounts change\r\n     this.eventMessengerService.subscribe('accountsChanged', async (event) => {\r\n       let { accounts } = event.data;\r\n       this.accounts = accounts;\r\n       await this.checkChain();\r\n     });\r\n \r\n     // Handle events when wallet accounts get disconnectd\r\n     this.eventMessengerService.subscribe('disconnect', async (event: any) => {\r\n       let { accounts } = event.data;\r\n       this.accounts = accounts;\r\n       await this.checkChain();\r\n     })\r\n\r\n     this.loadPropertys();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Toggle the container type\r\n   */\r\n  toggleContainerType(type) {\r\n    switch(type) {\r\n\r\n      case \"street\":\r\n        this.streetViewToggled = !this.streetViewToggled;\r\n      break;\r\n      case \"neighborhood\":\r\n        this.districtViewToggled = !this.districtViewToggled;\r\n        break;\r\n      case \"district\":\r\n        this.cityViewToggled = !this.cityViewToggled;\r\n      break;\r\n    }\r\n  }\r\n\r\n\r\n   /**\r\n\t * Make sure we are on the correct chain\r\n\t */\r\n\tasync checkChain() {\r\n\t\tif(this.smartContractCoreService.isMetaMaskInstalled()) {\r\n\t\t\tconst { chainId } = await this.smartContractCoreService.provider.getNetwork()\r\n\t\t\tif(environment.chainId === chainId) {\r\n\t\t\t\tthis.isOnMainnet = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.isOnMainnet = false;\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.isOnMainnet = false;\r\n\t\t\tthis.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\r\n  /**\r\n\t * Ensure metamask is installed so we can get wallet information\r\n\t */\r\n\tasync checkMetaMaskInstalled() {\r\n\t\tif(this.smartContractCoreService.isMetaMaskInstalled()) {\r\n\t\t  this.isMetaMaskInstalled = true;\r\n\t\t  this.accounts = await this.smartContractCoreService.getWalletAccounts();\r\n\t\t} else {\r\n\t\t  this.isMetaMaskInstalled = false;\r\n\t\t}\r\n\t}\r\n\r\n  \r\n  /**\r\n   * Claim Brix button\r\n   */\r\n   public claimBrix() {\r\n\r\n    // If token hasn't been approved, show modal to approve it\r\n    if(this.brixTokenApproved) {\r\n      this._dialog.open(BrixContractApprovalDialogComponent, {\r\n          width: '630px',\r\n          data: {\r\n            accounts: this.accounts\r\n          }\r\n      });\r\n    } else {\r\n      this.brixClaimLoading = true;\r\n    }\r\n}\r\n\r\n\r\n  /**\r\n   *  Countdown for current window\r\n\t */\r\n\tpublic updateCountdownTimer() {\r\n\t\tlet endDate = 1659902000000; // Update this with the end time in milliseconds\r\n\t\tlet now = Date.now()\r\n\t\tlet t = endDate - now;\r\n\t\t\r\n\t\tif (t >= 0) {\r\n\t\t\tthis.countdownHours = Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)).toString().padStart(2, '0');\r\n\t\t\tthis.countdownMins = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60)).toString().padStart(2, '0');\r\n\t\t\tthis.countdownSecs = Math.floor((t % (1000 * 60)) / 1000).toString().padStart(2, '0');\r\n\t\t} \r\n\t}\r\n\r\n\r\n  \r\n  /**\r\n   * \r\n   * Determine if a street has 7 units\r\n   */\r\n   isStreetComplete(street) {\r\n    return street.length === 7 ? true : false;\r\n  }\r\n\r\n\r\n  /**\r\n   * Build the \"Buy on Opensea\" buttons for each street \r\n   */\r\n  buildBuyButtonsForStreet(street) {\r\n    let buyOnOpenSeaArray = [];\r\n    for(let i = 0; i < (7 - street.length); i++) {\r\n      buyOnOpenSeaArray.push({\r\n        image: street[0]['image'],\r\n        street: street[0]['street'].replace(' ', '%20'),\r\n      });\r\n    }\r\n\r\n    return buyOnOpenSeaArray;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Loads all the propertys for a wallet and then organizes the table breakdown\r\n   */\r\n  public loadPropertys() {\r\n    this.smartContractCoreService\r\n        .getNFTsFromAddress(this.accounts[0])\r\n        .subscribe(async (data) => {\r\n            this.loading = false;\r\n\r\n            // Create some test data\r\n            let streetData = data.concat(data).concat(data).concat(data).concat(data).concat(data).concat(data).concat(data).concat(data).concat(data).concat(data).concat(data).concat(data);\r\n\r\n            // Iterate through the data and build the streets, districts, and cities\r\n            let allUnits = data.map(property => {\r\n\r\n              let propertyObj = {\r\n                image: property.image_preview_url\r\n              };\r\n              for(let trait of property.traits) {\r\n                // Street\r\n                if(trait.trait_type === 'Street Name') {\r\n                 propertyObj['street'] = trait.value;\r\n                }\r\n                // District\r\n                if(trait.trait_type === 'District Name') {\r\n                  propertyObj['district'] = trait.value;\r\n                }\r\n                // City\r\n                if(trait.trait_type === 'City Name') {\r\n                  propertyObj['city'] = trait.value;\r\n                }\r\n                // Unit\r\n                if(trait.trait_type === 'Unit') {\r\n                  propertyObj['unit'] = trait.value;\r\n                }\r\n              }\r\n\r\n              return propertyObj;\r\n            })\r\n\r\n\r\n            // Create entries for each property in order to catalog all streets under a single street object\r\n            allUnits.forEach(property => {\r\n              let propertyExists = false;\r\n              this.propertys.forEach(singleProperty => {\r\n                if(property.street === singleProperty.streetName) {\r\n                  propertyExists = true;\r\n                }\r\n              });\r\n\r\n              if(!propertyExists) {\r\n                this.propertys.push({\r\n                  streetName: property.street,\r\n                  units: [],\r\n                  streets: []\r\n                })\r\n              }\r\n            });\r\n\r\n\r\n            // Now that we know the streets, go through each one and initialize props for each\r\n            allUnits.forEach(property => {\r\n              // Now go through all the propertys\r\n              this.propertys.forEach(singleProperty => {\r\n\r\n                // We have a street match\r\n                if(singleProperty.streetName === property.street) {\r\n                  \r\n                  singleProperty.units.push(property);\r\n                }\r\n              })\r\n            })\r\n\r\n            // Now that we have all the property streets broken down, let's go through and divide them up\r\n            this.propertys.forEach(property => {\r\n              while(property.units.length) {\r\n                property.streets.push(property.units.splice(0,7));\r\n              }\r\n            })\r\n            \r\n            console.log('propertys', this.propertys);\r\n        });\r\n  }\r\n}\r\n","<propertys-header></propertys-header>\r\n\r\n<div class=\"wrapper\">\r\n\t<h1>Claim $BRIX</h1>\r\n\t<div class=\"window-text\">Window for claiming ends in {{countdownHours}}:{{countdownMins}}:{{countdownSecs}}</div>\r\n\r\n\t<!-- Streets -->\r\n\t<div class=\"property-type-container\">\r\n\t\t<div class=\"property-type-title\">\r\n\t\t\t<h3>Streets</h3>\r\n\t\t\t<div class=\"info-and-actions\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li class=\"complete\">\r\n\t\t\t\t\t\t<div class=\"total\">1</div> \r\n\t\t\t\t\t\t<div class=\"total-text\">Completed </div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<div class=\"total\">3</div> \r\n\t\t\t\t\t\t<div class=\"total-text\">In Progress </div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<button class=\"toggle-view-btn\" (click)=\"toggleContainerType('street')\">\r\n\t\t\t\t\t<i *ngIf=\"streetViewToggled\" class=\"fas fa-chevron-up\"></i>\r\n\t\t\t\t\t<i *ngIf=\"!streetViewToggled\" class=\"fas fa-chevron-down\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<ng-container  *ngIf=\"streetViewToggled\">\r\n\t\t\t<div *ngFor=\"let property of propertys\">\r\n\t\t\t\t<div class=\"property-list-container\" *ngFor=\"let street of property['streets']\">\r\n\t\t\t\t\t<div class=\"info\">\r\n\t\t\t\t\t\t<!-- Complete -->\r\n\t\t\t\t\t\t<div *ngIf=\"isStreetComplete(street)\" class=\"status-icon complete\">\r\n\t\t\t\t\t\t\t<i class=\"fas fa-check\"></i>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<!-- In progress -->\r\n\t\t\t\t\t\t<div *ngIf=\"!isStreetComplete(street)\" class=\"status-icon\">\r\n\t\t\t\t\t\t\t<i class=\"fas fa-tasks\"></i>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t\t\t<div class=\"title-text\">Name</div>\r\n\t\t\t\t\t\t\t<div class=\"name\">{{property['streetName']}}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t\t\t<div class=\"title-text\" *ngIf=\"isStreetComplete(street)\">Amount Earned</div>\r\n\t\t\t\t\t\t\t<div class=\"title-text\" *ngIf=\"!isStreetComplete(street)\">Amount to Earn</div>\r\n\t\t\t\t\t\t\t<div class=\"amount-to-earn earned\"\r\n\t\t\t\t\t\t\t\t[class]=\"{'earned': isStreetComplete(street) }\"\r\n\t\t\t\t\t\t\t>320 BRIX</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul class=\"street-blocks\">\r\n\t\t\t\t\t\t<li *ngFor=\"let unit of street\">\r\n\t\t\t\t\t\t\t<img [src]=\"unit.image\" width=\"100%\" />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li *ngFor=\"let buyButton of buildBuyButtonsForStreet(street)\">\r\n\t\t\t\t\t\t\t<a target=\"_blank\" href=\"https://opensea.io/collection/propertysofficial?search[sortAscending]=true&search[sortBy]=PRICE&search[stringTraits][0][name]=Street%20Name&search[stringTraits][0][values][0]={{buyButton.street}}\" class=\"buy-card-btn\">\r\n\t\t\t\t\t\t\t\t<img [src]=\"buyButton.image\" width=\"100%\" />\r\n\t\t\t\t\t\t\t\t<span class=\"buy-text\">Buy on Opensea</span>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</ng-container>\r\n\t</div>\r\n\r\n\t<!-- Districts -->\r\n\t<div class=\"property-type-container\">\r\n\t\t<div class=\"property-type-title\">\r\n\t\t\t<h3>Districts</h3>\r\n\t\t\t<div class=\"info-and-actions\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li class=\"complete\">\r\n\t\t\t\t\t\t<div class=\"total\">1</div> \r\n\t\t\t\t\t\t<div class=\"total-text\">Completed </div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<div class=\"total\">3</div> \r\n\t\t\t\t\t\t<div class=\"total-text\">In Progress </div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<button class=\"toggle-view-btn\" (click)=\"toggleContainerType('district')\">\r\n\t\t\t\t\t<i *ngIf=\"districtViewToggled\" class=\"fas fa-chevron-up\"></i>\r\n\t\t\t\t\t<i *ngIf=\"!districtViewToggled\" class=\"fas fa-chevron-down\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"property-list-container\" *ngIf=\"districtViewToggled\">\r\n\t\t\t<div class=\"info\">\r\n\t\t\t\t<div class=\"status-icon\">\r\n\t\t\t\t\t<i class=\"fas fa-tasks\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t<div class=\"title-text\">Name</div>\r\n\t\t\t\t\t<div class=\"name\">Muddy Mountains</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t<div class=\"title-text\">Amount to earn</div>\r\n\t\t\t\t\t<div class=\"amount-to-earn\">2100 BRIX</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<ul class=\"street-blocks\">\r\n\t\t\t\t<li><img src=\"/assets/images/cards/beige-bay-1.webp\" width=\"100%\" /></li>\r\n\t\t\t\t<li><img src=\"/assets/images/cards/beige-bay-1.webp\" width=\"100%\" /></li>\r\n\t\t\t</ul>\r\n\t\t\t<a target=\"_blank\" href=\"https://opensea.io/collection/propertysofficial?search[sortAscending]=true&search[sortBy]=PRICE&search[stringTraits][0][name]=City%20Name&search[stringTraits][0][values][0]=Beige%20Bay\" class=\"buy-more\">Buy 2 more streets in this district for completion</a>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\r\n\t<!-- Cities -->\r\n\t<div class=\"property-type-container\">\r\n\t\t<div class=\"property-type-title\">\r\n\t\t\t<h3>Cities</h3>\r\n\t\t\t<div class=\"info-and-actions\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li class=\"complete\">\r\n\t\t\t\t\t\t<div class=\"total\">1</div> \r\n\t\t\t\t\t\t<div class=\"total-text\">Completed </div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<div class=\"total\">3</div> \r\n\t\t\t\t\t\t<div class=\"total-text\">In Progress </div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<button class=\"toggle-view-btn\" (click)=\"toggleContainerType('city')\">\r\n\t\t\t\t\t<i *ngIf=\"cityViewToggled\" class=\"fas fa-chevron-up\"></i>\r\n\t\t\t\t\t<i *ngIf=\"!cityViewToggled\" class=\"fas fa-chevron-down\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"property-list-container\" *ngIf=\"cityViewToggled\">\r\n\t\t\t<div class=\"info\">\r\n\t\t\t\t<div class=\"status-icon\">\r\n\t\t\t\t\t<i class=\"fas fa-tasks\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t<div class=\"title-text\">Name</div>\r\n\t\t\t\t\t<div class=\"name\">Beige Bay</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t<div class=\"title-text\">Amount to earn</div>\r\n\t\t\t\t\t<div class=\"amount-to-earn\">15,500 BRIX</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<ul class=\"street-blocks\">\r\n\t\t\t\t<li><img src=\"/assets/images/cards/beige-bay-1.webp\" width=\"100%\" /></li>\r\n\t\t\t</ul>\r\n\t\t\t<a target=\"_blank\" href=\"https://opensea.io/collection/propertysofficial?search[sortAscending]=true&search[sortBy]=PRICE&search[stringTraits][0][name]=City%20Name&search[stringTraits][0][values][0]=Beige%20Bay\" class=\"buy-more\">Buy 6 more streets in this city for completion</a>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<!-- Totals to earn -->\r\n\t<div class=\"rent-collection-summary-container\">\r\n\t\t<div class=\"top\">\r\n\t\t\t<h2>Total Brix to Claim</h2>\r\n\t\t\t<div class=\"brix-total\">2500 BRIX</div>\r\n\t\t</div>\r\n\t\t<button [disabled]=\"brixClaimLoading\" (click)=\"claimBrix()\" class=\"claim-all-btn\">\r\n\t\t\t<span *ngIf=\"!brixClaimLoading\">Claim all</span>\r\n\t\t\t<img *ngIf=\"brixClaimLoading\" src=\"/assets/images/loading.gif\" width=\"50\"  />\r\n\t\t</button>\r\n\t\t<div class=\"wallet-balance\">\r\n\t\t\tIn your wallet \r\n\t\t\t<span class=\"total\">\r\n\t\t\t\t<!-- <img src=\"/assets/images/brix-icon.png\" width=\"16\" /> -->\r\n\t\t\t\t436\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<propertys-footer></propertys-footer>","import { NgModule } from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CommonModule} from '@angular/common';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { RentComponent } from './rent.component';\r\nimport {AppHeaderModule} from '../shared/components/app-header/app-header.module';\r\nimport {AppFooterModule} from '../shared/components/app-footer/app-footer.module';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { BrixContractApprovalDialogModule } from '../shared/dialogs/brix-contract-approval-dialog/brix-contract-approval-dialog.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RentComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FontAwesomeModule,\r\n    AppHeaderModule,\r\n    AppFooterModule,\r\n    MatDialogModule,\r\n    BrixContractApprovalDialogModule,\r\n    RouterModule.forChild([{\r\n      path: '',\r\n      component: RentComponent\r\n  }])\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MatDialogRef,\r\n      useValue: {}\r\n    },\r\n  ],\r\n  exports: [\r\n    RentComponent\r\n  ],\r\n  bootstrap: [RentComponent]\r\n})\r\nexport class RentModule { }\r\n","import {Component, Inject} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\n// import { ToastrService } from 'ngx-toastr';\r\nimport {SmartContractCoreService} from '../../services/smart-contract-core.service';\r\n// import {SmartContractBrixService} from '../../services/smart-contract-brix.service';\r\nimport {EventMessengerService} from '../../services/event-messenger.service';\r\n\r\n@Component({\r\n    selector: 'brix-contract-approval-dialog',\r\n    templateUrl: './brix-contract-approval-dialog.component.html',\r\n    styleUrls: ['./brix-contract-approval-dialog.component.scss']\r\n})\r\nexport class BrixContractApprovalDialogComponent {\r\n\r\n    public accounts: any = [];\r\n    public loading: any = false;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public _data: any,\r\n        public dialogRef: MatDialogRef<BrixContractApprovalDialogComponent>,\r\n        public smartContractCoreService: SmartContractCoreService,\r\n        // public smartContractBrixService: SmartContractBrixService,\r\n        public eventMessengerService: EventMessengerService,\r\n        // public toastr: ToastrService,\r\n    ) {\r\n        this.accounts = _data.accounts;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n    public async ngOnInit() {\r\n\r\n        // Handle changing account\r\n        this.eventMessengerService.subscribe('metmask.accountsChanged', (event: any) => {\r\n            let { accounts } = event.data;\r\n            this.accounts = accounts;\r\n\r\n            // this.handleMetamaskAccounts();\r\n        })\r\n\r\n        this.eventMessengerService.subscribe('metmask.disconnect', (event: any) => {\r\n                // this.dialogRef.close();\r\n        })\r\n\r\n        // this.handleMetamaskAccounts();\r\n    }\r\n\r\n\r\n    public async handleMetamaskAccounts() {\r\n        if(this.accounts.length == 0) {\r\n            // this.dialogRef.close();\r\n        } else {\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Approve UCD for use with burning for services\r\n     */\r\n    public approveBrix() {\r\n        // this.smartContractBrixService.setApprovalForBrix().then(async (tx: any) => {\r\n\t\t// \tthis.loading = true;\r\n\r\n        //     tx.wait().then((success: any) => {\r\n\t\t// \t\t// Reset quest state\r\n\t\t// \t\tthis.loading = false;\r\n        //         this.close();\r\n        //         this.toastr.success(\"Permissions approved successfully\")\r\n        //     });\r\n\t\t// })\r\n\t\t// .catch(err => {\r\n\t\t// \tthis.loading = false;\r\n\t\t// })\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n}\r\n","\r\n<div class=\"modal\">\r\n    <div class=\"title\">\r\n        <h3>Requesting Permissions</h3>\r\n    </div>\r\n\r\n    <p>We need your approval in order to claim BRIX Tokens</p>\r\n\r\n    <div class=\"actions\">\r\n        <button (click)=\"approveBrix()\" [disabled]=\"loading\" class=\"primary cta\">\r\n            <img *ngIf=\"loading\" src=\"/assets/images/loading.gif\" width=\"24\"  />\r\n            <span *ngIf=\"!loading\">Approve</span>\r\n        </button>\r\n        <button class=\"close\" (click)=\"close()\">Close</button>\r\n    </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';  \r\nimport { FormsModule } from '@angular/forms';\r\nimport {RouterModule} from '@angular/router';\r\nimport {BrixContractApprovalDialogComponent} from './brix-contract-approval-dialog.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        RouterModule\r\n    ],\r\n    declarations: [BrixContractApprovalDialogComponent],\r\n    exports: [BrixContractApprovalDialogComponent],\r\n    providers: [\r\n    ]\r\n})\r\nexport class BrixContractApprovalDialogModule {}\r\n"],"sourceRoot":"webpack:///"}
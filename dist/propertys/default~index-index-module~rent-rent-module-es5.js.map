{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","webpack:///node_modules/@angular/cdk/fesm2015/coercion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/keycodes.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/observers.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/cdk/fesm2015/cdk.js"],"names":["throwNullPortalError","Error","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","host","ngDevMode","hasAttached","_attachedHost","attach","detach","ComponentPortal","component","viewContainerRef","injector","componentFactoryResolver","TemplatePortal","template","context","templateRef","elementRef","undefined","DomPortal","element","nativeElement","BasePortalOutlet","_isDisposed","attachDomPortal","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","fn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","_document","parentNode","anchorNode","createComment","insertBefore","appendChild","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","length","setDisposeFn","destroy","create","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","rootNodes","forEach","rootNode","detectChanges","index","indexOf","remove","removeChild","DomPortalHost","CdkPortal","ɵfac","CdkPortal_Factory","t","ɵdir","type","selectors","exportAs","features","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","provide","useExisting","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","_attachedRef","ref","emit","clear","nodeType","ELEMENT_NODE","CdkPortalOutlet_Factory","inputs","outputs","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","ɵmod","ɵinj","ngJitMode","declarations","exports","PortalInjector","_parentInjector","_customTokens","token","notFoundValue","value","get","DataSource","isDataSource","connect","ArrayDataSource","_data","_DisposeViewRepeaterStrategy","changes","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","move","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","viewArgsFactory","_insertView","_detachAndCacheView","_moveView","cachedView","_insertViewFromCache","$implicit","viewArgs","detachedView","_maybeCacheView","push","pop","insert","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","_markSelected","_selected","Array","from","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","has","size","isEmpty","predicate","selected","sort","next","source","added","removed","add","getMultipleValuesInSingleSelectionError","UniqueSelectionDispatcher","_listeners","id","name","listener","filter","registered","UniqueSelectionDispatcher_Factory","ɵprov","factory","providedIn","_VIEW_REPEATER_STRATEGY","MatDialogContainer_ng_template_0_Template","rf","ctx","MatDialogConfig","role","panelClass","hasBackdrop","backdropClass","disableClose","width","height","maxWidth","data","ariaDescribedBy","ariaLabelledBy","ariaLabel","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","opacity","transform","throwMatDialogContentAlreadyAttachedError","_MatDialogContainerBase","_elementRef","_focusTrapFactory","_changeDetectorRef","_config","_focusMonitor","_animationStateChanged","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","_portalOutlet","_ariaLabelledBy","_setupFocusTrap","_capturePreviouslyFocusedElement","_focusDialogContainer","_containsFocus","focusContainer","_focusTrap","focusInitialElement","focus","focusInitialElementWhenReady","previousElement","activeElement","_getActiveElement","body","contains","focusVia","_a","shadowRoot","_MatDialogContainerBase_Factory","viewQuery","_MatDialogContainerBase_Query","_t","first","MatDialogContainer","arguments","_state","toState","totalTime","_trapFocus","state","_restoreFocus","markForCheck","MatDialogContainer_Factory","ɵMatDialogContainer_BaseFactory","ɵcmp","hostAttrs","hostVars","hostBindings","MatDialogContainer_HostBindings","MatDialogContainer_animation_dialogContainer_start_HostBindingHandler","$event","_onAnimationStart","MatDialogContainer_animation_dialogContainer_done_HostBindingHandler","_onAnimationDone","_id","decls","vars","consts","MatDialogContainer_Template","directives","styles","encapsulation","animation","uniqueId","MatDialogRef","_overlayRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","pipe","event","subscribe","complete","clearTimeout","_closeFallbackTimeout","_finishDialogClose","detachments","_result","componentInstance","dispose","keydownEvents","keyCode","preventDefault","_closeDialogVia","backdropClick","_recaptureFocus","dialogResult","detachBackdrop","setTimeout","_startExitAnimation","position","strategy","_getPositionStrategy","left","right","centerHorizontally","top","bottom","centerVertically","updatePosition","updateSize","classes","addPanelClass","removePanelClass","getConfig","positionStrategy","interactionType","result","close","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","block","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","deps","useFactory","_MatDialogBase","_overlay","_injector","_defaultOptions","_parentDialog","_overlayContainer","scrollStrategy","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","Map","afterAllClosed","openDialogs","_getAfterAllClosed","_scrollStrategy","afterOpened","parent","componentOrTemplateRef","config","_applyConfigDefaults","getDialogById","overlayRef","_createOverlay","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","afterClosed","_removeOpenDialog","_initializeWithAttachedContent","_closeDialogs","find","dialog","overlayConfig","_getOverlayConfig","dialogConfig","global","direction","minWidth","minHeight","maxHeight","disposeOnNavigation","userInjector","providers","useValue","containerPortal","containerRef","instance","_createInjector","contentRef","change","splice","previousValue","setAttribute","removeAttribute","overlayContainer","getContainerElement","parentElement","siblings","children","i","sibling","nodeName","hasAttribute","set","getAttribute","dialogs","_MatDialogBase_Factory","MatDialog","location","defaultOptions","parentDialog","MatDialog_Factory","Object","assign","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","proxiedChange","currentValue","screenX","screenY","MatDialogClose_Factory","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","_onButtonClick","_matDialogClose","MatDialogTitle","_dialogRef","Promise","resolve","then","container","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","MatDialogActions_Factory","classList","MatDialogModule","MatDialogModule_Factory","imports","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","Number","isNaN","parseFloat","coerceArray","isArray","coerceCssPixelValue","coerceElement","elementOrRef","coerceStringArray","separator","sourceValues","split","sourceValue","trimmedString","trim","_c0","_c1","MatOption_mat_pseudo_checkbox_0_Template","ctx_r0","disabled","MatOption_span_3_Template","ctx_r1","group","label","_c2","VERSION","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","MatCommonModule","highContrastModeDetector","sanityChecks","document","_hasDoneGlobalChecks","_applyBodyHighContrastModeCssClasses","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","win","defaultView","window","_isTestEnv","_getWindow","__karma__","jasmine","isEnabled","_checksAreEnabled","doctype","console","warn","isDisabled","theme","getComputedStyle","testElement","createElement","computedStyle","display","version","full","MatCommonModule_Factory","mixinDisabled","base","args","_disabled","mixinColor","defaultColor","color","_color","colorPalette","mixinDisableRipple","Mixin","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","mixinErrorState","errorState","stateChanges","oldState","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","mixinInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","DateAdapter","_localeChanges","localeChanges","obj","isDateInstance","isValid","invalid","locale","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","min","max","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","DEFAULT_MONTH_NAMES","ɵ0","String","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDay","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","parse","displayFormat","clone","setFullYear","Math","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","NaN","d","setHours","n","slice","str","replace","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","format","NativeDateAdapter_Factory","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","MatLine","MatLine_Factory","setLines","lines","prefix","setClass","className","isAdd","MatLineModule","MatLineModule_Factory","RippleRef","_renderer","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","_ngZone","elementOrElementRef","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","isBrowser","_containerElement","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","centered","radius","distanceToFurthestCorner","offsetX","offsetY","duration","ripple","backgroundColor","transitionDuration","enforceStyleRecalculation","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","fadeOut","wasActive","rippleEl","_triggerElement","_removeTriggerEvents","_registerEvents","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","delay","runOutsideAngular","eventTypes","addEventListener","removeEventListener","getPropertyValue","rect","distX","abs","distY","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_animationMode","_globalOptions","_rippleRenderer","fadeOutAllNonPersistent","_setupTriggerEventsIfEnabled","_trigger","trigger","fadeOutAll","setupTriggerEvents","configOrX","MatRipple_Factory","MatRipple_HostBindings","unbounded","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","MatPseudoCheckbox_HostBindings","MatPseudoCheckbox_Template","changeDetection","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MAT_OPTION_PARENT_COMPONENT","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","_MatOptgroupBase_Factory","MAT_OPTGROUP","MatOptgroup","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","toString","ngContentSelectors","MatOptgroup_Template","_uniqueIdCounter","MatOptionSelectionChange","isUserInput","_MatOptionBase","_element","_parent","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","multiple","disableRipple","_getHostElement","textContent","_emitSelectionChangeEvent","_origin","options","viewValue","_selectViaInteraction","_MatOptionBase_Factory","MatOption","changeDetectorRef","MatOption_Factory","MatOption_HostBindings","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","_handleKeydown","_getTabIndex","_getAriaSelected","active","MatOption_Template","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","MatOptionModule_Factory","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","PERIOD","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","hasModifierKey","modifiers","some","modifier","altKey","shiftKey","ctrlKey","metaKey","MutationObserverFactory","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","_","_cleanupObserver","observer","stream","_observeElement","subscription","unsubscribe","_unobserveElement","mutations","observe","characterData","childList","subtree","count","disconnect","ContentObserver_Factory","CdkObserveContent","_contentObserver","_currentSubscription","_unsubscribe","_subscribe","_debounce","debounce","CdkObserveContent_Factory","ObserversModule","ObserversModule_Factory","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","Directionality","bodyDir","dir","htmlDir","documentElement","Directionality_Factory","Dir","_dir","old","normalizedValue","toLowerCase","_rawDir","Dir_Factory","Dir_HostBindings","BidiModule","BidiModule_Factory","hasV8BreakIterator","v8BreakIterator","Platform","_platformId","navigator","userAgent","BLINK","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","Platform_Factory","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","normalizePassiveListenerOptions","capture","rtlScrollAxisType","scrollBehaviorSupported","supportsScrollBehavior","Element","scrollToFunction","prototype","scrollTo","getRtlScrollAxisType","scrollContainer","containerStyle","overflow","visibility","pointerEvents","content","contentStyle","scrollLeft","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","_getShadowRoot","getRootNode","ShadowRoot","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","_isEnabled","_canBeEnabled","root","_previousScrollPosition","getViewportScrollPosition","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","viewport","getViewportSize","scrollHeight","scrollWidth","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_scrollSubscription","_detach","disable","run","scrolled","threshold","_initialScrollPosition","scrollPosition","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","containerBounds","outsideAbove","outsideBelow","outsideLeft","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","parentRects","ScrollStrategyOptions","noop","reposition","ScrollStrategyOptions_Factory","OverlayConfig","configKeys","keys","key","ConnectionPositionPair","origin","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","BaseOverlayDispatcher","_attachedOverlays","BaseOverlayDispatcher_Factory","OverlayKeyboardDispatcher","_keydownListener","overlays","_keydownEvents","observers","_isAttached","OverlayKeyboardDispatcher_Factory","OverlayOutsideClickDispatcher","_platform","_cursorStyleIsSet","_clickListener","target","composedPath","_outsidePointerEvents","_cursorOriginalValue","cursor","OverlayOutsideClickDispatcher_Factory","isTestEnvironment","OverlayContainer","_createContainer","containerClass","oppositePlatformContainers","querySelectorAll","OverlayContainer_Factory","OverlayRef","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","_positionStrategy","attachResult","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","onStable","_togglePointerEvents","_attachBackdrop","_toggleClasses","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","sizeConfig","getDirection","enablePointer","showingClass","requestAnimationFrame","nextSibling","backdropToDetach","timeoutId","finishDetach","cssClasses","cssClass","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","offset","selector","_transformOriginSelector","startX","_isRtl","endX","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","start","overflowRight","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","_hasExactPosition","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","_pushOverlayOnScreen","virtualKeyboardOffset","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentOverflow","axis","pair","destination","hasOwnProperty","input","units","clientRect","floor","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","onPositionChange","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","OverlayPositionBuilder","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","_positionBuilder","_directionality","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","CdkConnectedOverlay","scrollStrategyFactory","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","_buildConfig","attachments","outsidePointerEvents","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","CdkConnectedOverlay_Factory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OverlayModule_Factory","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","ID_DELIMITER","addAriaReferencedId","el","attr","ids","getAriaReferenceIds","existingId","removeAriaReferencedId","filteredIds","val","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","messageRegistry","messagesContainer","AriaDescriber","message","_canBeDescribed","getKey","setMessageId","messageElement","referenceCount","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","_deleteMessagesContainer","describedElements","_removeCdkDescribedByReferenceIds","_createMessagesContainer","preExistingContainer","getElementById","originalReferenceIds","referenceIds","messageId","trimmedMessage","AriaDescriber_Factory","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","_vertical","_allowedModifierKeys","_homeAndEnd","_skipPredicateFn","item","_pressedLetters","tabOut","newItems","itemArray","newIndex","shouldWrap","enabled","_horizontal","debounceInterval","getLabel","letter","inputString","items","_getItemsArray","toUpperCase","setActiveItem","previousActiveItem","updateActiveItem","isModifierAllowed","every","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","toLocaleUpperCase","fromCharCode","_setActiveItemByIndex","_setActiveItemByDelta","activeItem","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusKeyManager","IsFocusableConfig","ignoreVisibility","InteractivityChecker","hasGeometry","frameElement","getFrameElement","getWindow","getTabIndexValue","tabIndexValue","isPotentiallyTabbableIOS","tabIndex","isPotentiallyFocusable","InteractivityChecker_Factory","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","parseInt","inputType","node","ownerDocument","FocusTrap","_checker","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","_startAnchor","_endAnchor","_toggleAnchorTabIndex","startAnchor","endAnchor","_createAnchor","_executeOnStable","bound","markers","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","isFocusable","focusableChild","_getRegionBoundary","isTabbable","tabbableChild","anchor","isStable","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","CdkTrapFocus","_previouslyFocusedElement","focusTrap","_autoCapture","autoCapture","_captureFocus","autoCaptureChange","firstChange","_b","CdkTrapFocus_Factory","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","defer","register","deregister","preventFocus","toggleAnchors","allowFocus","closest","Node","curr","hasNativeClosest","polyfillClosest","matches","EventListenerFocusTrapInertStrategy","_listener","e","focusTrapRoot","ConfigurableFocusTrapConfig","FOCUS_TRAP_INERT_STRATEGY","FocusTrapManager","_focusTrapStack","ft","stack","_disable","_enable","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_liveElement","_createLiveElement","politeness","_previousTimeout","elementClass","previousElements","getElementsByClassName","liveEl","LiveAnnouncer_Factory","CdkAriaLive","_liveAnnouncer","_politeness","_subscription","elementText","_previousAnnouncedText","announce","CdkAriaLive_Factory","isFakeMousedownFromScreenReader","buttons","isFakeTouchstartFromScreenReader","touch","identifier","radiusX","radiusY","TOUCH_BUFFER_MS","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_windowFocused","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_documentKeydownListener","_lastTouchTarget","_setOriginForCurrentEventQueue","_documentMousedownListener","_documentTouchstartListener","_touchTimeoutId","getTarget","_windowFocusListener","_windowFocusTimeoutId","_rootNodeFocusAndBlurListener","handler","_onFocus","_onBlur","call","_detectionMode","detectionMode","checkChildren","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","elementInfo","_setClasses","_removeGlobalListeners","focusedElement","_getClosestElementsInfo","currentElement","_originChanged","_info","stopMonitoring","doc","shouldSet","_lastFocusOrigin","_wasCausedByTouch","_toggleClass","_originTimeoutId","focusTarget","_getFocusOrigin","relatedTarget","_emitOrigin","rootNodeFocusListeners","results","FocusMonitor_Factory","CdkMonitorFocus","cdkFocusChange","_monitorSubscription","monitor","CdkMonitorFocus_Factory","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","documentWindow","computedColor","bodyClasses","mode","getHighContrastMode","HighContrastModeDetector_Factory","A11yModule","A11yModule_Factory","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","ancestors","getAncestorScrollContainers","scrollingContainers","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","_destroyed","_elementScrolled","_applyScrollToOptions","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportRuler","_change","_changeListener","_updateViewportSize","_viewportSize","output","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_detachedSubject","_renderedRangeSubject","_orientation","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","orientation","_calculateSpacerSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","newLength","onDataLengthChanged","_doChangeDetection","onContentRendered","to","isHorizontal","axisDirection","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","measureRangeSize","viewportEl","runAfter","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","CdkVirtualScrollViewport_Query","CdkVirtualScrollViewport_HostBindings","CdkVirtualScrollViewport_Template","getOffset","CdkVirtualForOf","_template","_differs","_viewRepeater","viewChange","_dataSourceChanges","prev","cur","_changeDataSource","_differ","_needsUpdate","_onRenderedDataChange","_cdkVirtualForOf","_cdkVirtualForTrackBy","renderedStartIndex","rangeLen","firstNode","lastNode","diff","_renderedItems","_updateContext","_applyChanges","cdkVirtualForTrackBy","oldDs","newDs","_updateComputedContextProperties","applyChanges","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","last","even","odd","cdkVirtualForOf","CdkVirtualForOf_Factory","cdkVirtualForTemplate","cdkVirtualForTemplateCacheSize","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory"],"mappings":"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A;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;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","file":"default~index-index-module~rent-rent-module-es5.js","sourcesContent":["import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn((() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : nativeElement.parentNode);\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵfac = function PortalModule_Factory(t) { return new (t || PortalModule)(); };\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { isObservable, of, Subject } from 'rxjs';\nimport { ɵɵdefineInjectable, Injectable, InjectionToken } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = 1 /* INSERTED */;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = 3 /* REMOVED */;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = 2 /* MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view === null || view === void 0 ? void 0 : view.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    constructor() {\n        /**\n         * The size of the cache used to store unused views.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n         */\n        this.viewCacheSize = 20;\n        /**\n         * View cache that stores embedded view instances that have been previously stamped out,\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\n         * creating brand new ones.\n         *\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n         */\n        this._viewCache = [];\n    }\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) { // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? 1 /* INSERTED */ : 0 /* REPLACED */;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = 3 /* REMOVED */;\n            }\n            else { // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = 2 /* MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view === null || view === void 0 ? void 0 : view.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return () => {\n            this._listeners = this._listeners.filter((registered) => {\n                return listener !== registered;\n            });\n        };\n    }\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\nUniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Directive, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injector, TemplateRef, Type, Injectable, SkipSelf, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether the dialog should focus the first focusable element on open. */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\nclass _MatDialogContainerBase extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, \n    /** The dialog configuration. */\n    _config, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        this._focusMonitor = _focusMonitor;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /** Initializes the dialog container with the attached content. */\n    _initializeWithAttachedContent() {\n        this._setupFocusTrap();\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        this._capturePreviouslyFocusedElement();\n        // Move focus onto the dialog immediately in order to prevent the user\n        // from accidentally opening multiple dialogs at the same time.\n        this._focusDialogContainer();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Moves focus back into the dialog if it was moved out. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            const focusContainer = !this._config.autoFocus || !this._focusTrap.focusInitialElement();\n            if (focusContainer) {\n                this._elementRef.nativeElement.focus();\n            }\n        }\n    }\n    /** Moves the focus inside the focus trap. */\n    _trapFocus() {\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else if (!this._containsFocus()) {\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const previousElement = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && previousElement &&\n            typeof previousElement.focus === 'function') {\n            const activeElement = this._getActiveElement();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    previousElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Sets up the focus trap. */\n    _setupFocusTrap() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    /** Captures the element that was focused before the dialog was opened. */\n    _capturePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = this._getActiveElement();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = this._getActiveElement();\n        return element === activeElement || element.contains(activeElement);\n    }\n    /** Gets the currently-focused element on the page. */\n    _getActiveElement() {\n        var _a;\n        // If the `activeElement` is inside a shadow root, `document.activeElement` will\n        // point to the shadow root so we have to descend into it ourselves.\n        const activeElement = this._document.activeElement;\n        return ((_a = activeElement === null || activeElement === void 0 ? void 0 : activeElement.shadowRoot) === null || _a === void 0 ? void 0 : _a.activeElement) || activeElement;\n    }\n}\n_MatDialogContainerBase.ɵfac = function _MatDialogContainerBase_Factory(t) { return new (t || _MatDialogContainerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\n_MatDialogContainerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatDialogContainerBase, viewQuery: function _MatDialogContainerBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatDialogContainerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig },\n    { type: FocusMonitor }\n];\n_MatDialogContainerBase.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatDialogContainerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }, { type: ɵngcc1.FocusMonitor }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor() {\n        super(...arguments);\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._trapFocus();\n            this._animationStateChanged.next({ state: 'opened', totalTime });\n        }\n        else if (toState === 'exit') {\n            this._restoreFocus();\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) { return ɵMatDialogContainer_BaseFactory(t || MatDialogContainer); };\nMatDialogContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._id);\n        ɵngcc0.ɵɵattribute(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\nconst ɵMatDialogContainer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatDialogContainer);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closed'), take(1)).subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this._overlayRef.dispose();\n        });\n        _overlayRef.keydownEvents()\n            .pipe(filter(event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            _closeDialogVia(this, 'keyboard');\n        });\n        _overlayRef.backdropClick().subscribe(() => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                _closeDialogVia(this, 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._afterClosed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._overlayRef.updateSize({ width, height });\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    _getPositionStrategy() {\n        return this._overlayRef.getConfig().positionStrategy;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n    // For those, we keep the behavior as is and do not deal with the interaction type.\n    if (ref._containerInstance !== undefined) {\n        ref._containerInstance._closeInteractionType = interactionType;\n    }\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length ?\n            this._getAfterAllClosed() :\n            this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayRef = this._createOverlay(config);\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n        this.afterOpened.next(dialogRef);\n        // Notify the dialog container that the content has been attached.\n        dialogContainer._initializeWithAttachedContent();\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogContainer Reference to the wrapping dialog container.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, { $implicit: config.data, dialogRef }));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog.\n     * @param dialogContainer Dialog container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: this._dialogContainerType, useValue: dialogContainer },\n            { provide: this._dialogDataToken, useValue: config.data },\n            { provide: this._dialogRefConstructor, useValue: dialogRef }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     */\n    _removeOpenDialog(dialogRef) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                this._getAfterAllClosed().next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /** Closes all of the dialogs in an array. */\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = function _MatDialogBase_Factory(t) { return new (t || _MatDialogBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.OverlayContainer), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Type), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Type), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.InjectionToken)); };\n_MatDialogBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatDialogBase });\n_MatDialogBase.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: undefined },\n    { type: undefined },\n    { type: OverlayContainer },\n    { type: undefined },\n    { type: Type },\n    { type: Type },\n    { type: InjectionToken }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatDialogBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: undefined }, { type: undefined }, { type: ɵngcc3.OverlayContainer }, { type: undefined }, { type: ɵngcc0.Type }, { type: ɵngcc0.Type }, { type: ɵngcc0.InjectionToken }]; }, null); })();\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, overlayContainer) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA);\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler($event) { return ctx._onButtonClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': '_onButtonClick($event)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); };\nMatDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogActions, MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogContent, MatDialogActions, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n//# sourceMappingURL=coercion.js.map\n","import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nfunction MatOption_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r1.group.label, \")\");\n} }\nconst _c2 = [\"*\"];\nconst VERSION = new Version('11.2.13');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION$1 = new Version('11.2.13');\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, sanityChecks, document) {\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        this._document = document;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const win = this._document.defaultView || window;\n        return typeof win === 'object' && win ? win : null;\n    }\n    /** Whether any sanity checks are enabled. */\n    _checksAreEnabled() {\n        // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n        // it. Since these checks can have performance implications and they aren't tree shakeable\n        // in their current form, we can leave the `isDevMode` check in for now.\n        // tslint:disable-next-line:ban\n        return isDevMode() && !this._isTestEnv();\n    }\n    /** Whether the code is running in tests. */\n    _isTestEnv() {\n        const window = this._getWindow();\n        return window && (window.__karma__ || window.jasmine);\n    }\n    _checkDoctypeIsDefined() {\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || this._sanityChecks.doctype);\n        if (isEnabled && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        const isDisabled = !this._checksAreEnabled() ||\n            (this._sanityChecks === false || !this._sanityChecks.theme);\n        if (isDisabled || !this._document.body || typeof getComputedStyle !== 'function') {\n            return;\n        }\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /** Checks whether the material version matches the cdk version */\n    _checkCdkVersionMatch() {\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || this._sanityChecks.version);\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT)); };\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule], BidiModule] });\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `disabled` property. */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() { return this._disabled; }\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `color` property. */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() { return this._color; }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `disableRipple` property. */\nfunction mixinDisableRipple(base) {\n    class Mixin extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() { return this._disableRipple; }\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    }\n    // Since we don't directly extend from `base` with it's original types, and we instruct\n    // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n    // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n    return Mixin;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `tabIndex` property. */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n    // but given we `extend` it from another class, we can assume a constructor being accessible.\n    class Mixin extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    }\n    // Since we don't directly extend from `base` with it's original types, and we instruct\n    // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n    // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n    return Mixin;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = i => String(i + 1);\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0);\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param str The string to strip direction characters from.\n     * @returns The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); };\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); };\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) { return new (t || MatLineModule)(); };\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple. */\n        this.state = 3 /* HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /** Set of currently active ripple references. */\n        this._activeRipples = new Set();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const duration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone(() => {\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone(() => {\n            rippleRef.state = 3 /* HIDDEN */;\n            rippleEl.parentNode.removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._activeRipples.forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach((type) => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach((type) => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach((type) => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); };\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule, PlatformModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); };\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nclass MatOptgroupBase {\n}\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        var _a;\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;\n    }\n}\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) { return new (t || _MatOptgroupBase)(ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8)); };\n_MatOptgroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatOptgroupBase, inputs: { label: \"label\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatOptgroupBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }, { type: Optional }] }\n];\n_MatOptgroupBase.propDecorators = {\n    label: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }, {\n                type: Optional\n            }] }]; }, { label: [{\n            type: Input\n        }] }); })();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [1, \"mat-optgroup\"], hostVars: 5, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[\"aria-hidden\", \"true\", 1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatOptgroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-optgroup',\n                    '[attr.role]': '_inert ? null : \"group\"',\n                    '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                    '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                    '[class.mat-optgroup-disabled]': 'disabled'\n                },\n                providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }],\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /** Whether or not the option is currently selected. */\n    get selected() { return this._selected; }\n    /** Whether the option is disabled. */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) { return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase)); };\n_MatOptionBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatOptionBase, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" } });\n_MatOptionBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined },\n    { type: _MatOptgroupBase }\n];\n_MatOptionBase.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, exportAs: [\"matOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 5, vars: 4, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"], [1, \"cdk-visually-hidden\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatOption_span_3_Template, 2, 1, \"span\", 2);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc3.NgIf, MatRipple, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTGROUP,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                },\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTGROUP]\n            }] }]; }, null); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); };\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0$1 as ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n//# sourceMappingURL=core.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n\n//# sourceMappingURL=keycodes.js.map","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ɵɵdefineInjectable, Injectable, ɵɵinject, EventEmitter, Directive, ElementRef, NgZone, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\nMutationObserverFactory.ɵprov = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\nContentObserver.ɵprov = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() { return this._debounce; }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        var _a;\n        (_a = this._currentSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n}\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkObserveContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent'\n            }]\n    }], function () { return [{ type: ContentObserver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\n            type: Output,\n            args: ['cdkObserveContent']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkObserveContentDisabled']\n        }], debounce: [{\n            type: Input\n        }] }); })();\nclass ObserversModule {\n}\nObserversModule.ɵfac = function ObserversModule_Factory(t) { return new (t || ObserversModule)(); };\nObserversModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\nObserversModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [MutationObserverFactory] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n\n//# sourceMappingURL=observers.js.map","import { InjectionToken, inject, EventEmitter, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\nDirectionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() { return this._dir; }\n    set dir(value) {\n        const old = this._dir;\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() { return this.dir; }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵfac = function BidiModule_Factory(t) { return new (t || BidiModule)(); };\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\n\n//# sourceMappingURL=bidi.js.map","import { ɵɵdefineInjectable, ɵɵinject, PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && Intl.v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser && (!!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nPlatform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID)); }, token: Platform, providedIn: \"root\" });\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵfac = function PlatformModule_Factory(t) { return new (t || PlatformModule)(); };\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => supportsPassiveEvents = true\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        scrollContainer.parentNode.removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n\n//# sourceMappingURL=platform.js.map","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, Optional, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = function BaseOverlayDispatcher_Factory(t) { return new (t || BaseOverlayDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nBaseOverlayDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function BaseOverlayDispatcher_Factory() { return new BaseOverlayDispatcher(ɵɵinject(DOCUMENT)); }, token: BaseOverlayDispatcher, providedIn: \"root\" });\nBaseOverlayDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseOverlayDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document) {\n        super(document);\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nOverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform) {\n        super(document);\n        this._platform = _platform;\n        this._cursorStyleIsSet = false;\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            // Get the target through the `composedPath` if possible to account for shadow DOM.\n            const target = event.composedPath ? event.composedPath()[0] : event.target;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click dispatch the mouse event, and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target)) {\n                    break;\n                }\n                overlayRef._outsidePointerEvents.next(event);\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            body.addEventListener('click', this._clickListener, true);\n            body.addEventListener('auxclick', this._clickListener, true);\n            body.addEventListener('contextmenu', this._clickListener, true);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = function OverlayOutsideClickDispatcher_Factory(t) { return new (t || OverlayOutsideClickDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayOutsideClickDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayOutsideClickDispatcher_Factory() { return new OverlayOutsideClickDispatcher(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayOutsideClickDispatcher, providedIn: \"root\" });\nOverlayOutsideClickDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayOutsideClickDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(window.__karma__ || window.jasmine);\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        if (this._platform.isBrowser || isTestEnvironment) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].parentNode.removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = null;\n        }\n        this._previousHostParent = this._pane = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        let timeoutId;\n        let finishDetach = () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach(cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        });\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height)\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * @breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n        this.onPositionChange = this._positionStrategy.positionChanges;\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attach this position strategy to an overlay. */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /** Disposes all resources used by the position strategy. */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /** @docs-private */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        this._preferredPositions.push(position);\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if (this._overlayRef) {\n            this._overlayRef.setDirection(dir);\n        }\n        else {\n            this._direction = dir;\n        }\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    withOffsetX(offset) {\n        this._positionStrategy.withDefaultOffsetX(offset);\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    withOffsetY(offset) {\n        this._positionStrategy.withDefaultOffsetY(offset);\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked) {\n        this._positionStrategy.withLockedPosition(isLocked);\n        return this;\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions.slice();\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    setOrigin(origin) {\n        this._positionStrategy.setOrigin(origin);\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @param elementRef\n     * @param originPos\n     * @param overlayPos\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * @breaking-change 8.0.0\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\nOverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location), ɵngcc0.ɵɵinject(OverlayOutsideClickDispatcher)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location },\n    { type: OverlayOutsideClickDispatcher }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location }, { type: OverlayOutsideClickDispatcher }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() { return this._offsetX; }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() { return this._offsetY; }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() { return this._lockPosition; }\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() { return this._growAfterOpen; }\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() { return this._push; }\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    disableClose: [{ type: Input, args: ['cdkConnectedOverlayDisableClose',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }],\n    overlayOutsideClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], disableClose: [{\n            type: Input,\n            args: ['cdkConnectedOverlayDisableClose']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], overlayOutsideClick: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵfac = function OverlayModule_Factory(t) { return new (t || OverlayModule)(); };\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay, CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nFullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_a, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_c, BaseOverlayDispatcher as ɵangular_material_src_cdk_overlay_overlay_d };\n\n//# sourceMappingURL=overlay.js.map","import { DOCUMENT } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, QueryList, NgZone, Directive, ElementRef, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Platform, normalizePassiveListenerOptions, _getShadowRoot, PlatformModule } from '@angular/cdk/platform';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IDs are delimited by an empty space, as per the spec. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/observers';\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** ID used for the body container where all messages are appended. */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/** ID prefix used for each created message element. */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/** Attribute given to each host element that is described by a message element. */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/** Global map of all registered message elements that have been placed into the document. */\nconst messageRegistry = new Map();\n/** Container for all registered messages. */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document) {\n        this._document = _document;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message);\n            messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        messagesContainer.appendChild(messageElement);\n        messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        const registeredMessage = messageRegistry.get(key);\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer && preExistingContainer.parentNode) {\n                preExistingContainer.parentNode.removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            // We add `visibility: hidden` in order to prevent text in this container from\n            // being searchable by the browser's Ctrl + F functionality.\n            // Screen-readers will still read the description for elements with aria-describedby even\n            // when the description element is not visible.\n            messagesContainer.style.visibility = 'hidden';\n            // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n            // the description element doesn't impact page layout.\n            messagesContainer.classList.add('cdk-visually-hidden');\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /** Deletes the global messages container. */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = function AriaDescriber_Factory(t) { return new (t || AriaDescriber)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nAriaDescriber.ɵprov = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AriaDescriber, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && (this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream.pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join(''))).subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) &&\n            ((config === null || config === void 0 ? void 0 : config.ignoreVisibility) || this.isVisible(element));\n    }\n}\nInteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) { return new (t || InteractivityChecker)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nInteractivityChecker.ɵprov = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InteractivityChecker, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Whether the focus trap is active. */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement()));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`);\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild === null || focusableChild === void 0 ? void 0 : focusableChild.focus();\n                return !!focusableChild;\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement() {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement() {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement(children[i]) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement(children[i]) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) { return new (t || FocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /** Whether the focus trap is active. */\n    get enabled() { return this.focusTrap.enabled; }\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() { return this._autoCapture; }\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        var _a, _b;\n        // If the `activeElement` is inside a shadow root, `document.activeElement` will\n        // point to the shadow root so we have to descend into it ourselves.\n        const activeElement = (_a = this._document) === null || _a === void 0 ? void 0 : _a.activeElement;\n        this._previouslyFocusedElement =\n            ((_b = activeElement === null || activeElement === void 0 ? void 0 : activeElement.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement) || activeElement;\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n}\nCdkTrapFocus.ɵfac = function CdkTrapFocus_Factory(t) { return new (t || CdkTrapFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkTrapFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTrapFocus, selectors: [[\"\", \"cdkTrapFocus\", \"\"]], inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTrapFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { enabled: [{\n            type: Input,\n            args: ['cdkTrapFocus']\n        }], autoCapture: [{\n            type: Input,\n            args: ['cdkTrapFocusAutoCapture']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Whether the FocusTrap is enabled. */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IE 11 compatible closest implementation that is able to start from non-Element Nodes. */\nfunction closest(element, selector) {\n    if (!(element instanceof Node)) {\n        return null;\n    }\n    let curr = element;\n    while (curr != null && !(curr instanceof Element)) {\n        curr = curr.parentNode;\n    }\n    return curr && (hasNativeClosest ?\n        curr.closest(selector) : polyfillClosest(curr, selector));\n}\n/** Polyfill for browsers without Element.closest. */\nfunction polyfillClosest(element, selector) {\n    let curr = element;\n    while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n        curr = curr.parentNode;\n    }\n    return (curr || null);\n}\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n/** IE 11 compatible matches implementation. */\nfunction matches(element, selector) {\n    return element.matches ?\n        element.matches(selector) :\n        element['msMatchesSelector'](selector);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nclass ConfigurableFocusTrapConfig {\n    constructor() {\n        /**\n         * Whether to defer the creation of FocusTrap elements to be\n         * done manually by the user. Default is to create them\n         * automatically.\n         */\n        this.defer = false;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter((ft) => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = function FocusTrapManager_Factory(t) { return new (t || FocusTrapManager)(); };\nFocusTrapManager.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapManager_Factory() { return new FocusTrapManager(); }, token: FocusTrapManager, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusTrapManager, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = new ConfigurableFocusTrapConfig()) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = new ConfigurableFocusTrapConfig();\n            configObject.defer = config;\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) { return new (t || ConfigurableFocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(FocusTrapManager), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); };\nConfigurableFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function ConfigurableFocusTrapFactory_Factory() { return new ConfigurableFocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(FocusTrapManager), ɵɵinject(DOCUMENT), ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); }, token: ConfigurableFocusTrapFactory, providedIn: \"root\" });\nConfigurableFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: FocusTrapManager },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_TRAP_INERT_STRATEGY,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfigurableFocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_TRAP_INERT_STRATEGY]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout(() => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout(() => this.clear(), duration);\n                    }\n                }, 100);\n            });\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = null;\n        }\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].parentNode.removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = function LiveAnnouncer_Factory(t) { return new (t || LiveAnnouncer)(ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); };\nLiveAnnouncer.ɵprov = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LiveAnnouncer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() { return this._politeness; }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = function CdkAriaLive_Factory(t) { return new (t || CdkAriaLive)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkAriaLive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAriaLive, selectors: [[\"\", \"cdkAriaLive\", \"\"]], inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"] });\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAriaLive, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: LiveAnnouncer }, { type: ɵngcc2.ContentObserver }, { type: ɵngcc0.NgZone }]; }, { politeness: [{\n            type: Input,\n            args: ['cdkAriaLive']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // We can typically distinguish between these faked mousedown events and real mousedown events\n    // using the \"buttons\" property. While real mousedowns will indicate the mouse button that was\n    // pressed (e.g. \"1\" for the left mouse button), faked mousedowns will usually set the property\n    // value to 0.\n    return event.buttons === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) ||\n        (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return !!touch && touch.identifier === -1 && (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nconst TOUCH_BUFFER_MS = 650;\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        };\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (event) => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                // In some cases screen readers fire fake `mousedown` events instead of `keydown`.\n                // Resolve the focus source to `keyboard` if we detect one of them.\n                const source = isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse';\n                this._setOriginForCurrentEventQueue(source);\n            }\n        };\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (event) => {\n            // Some screen readers will fire a fake `touchstart` event if an element is activated using\n            // the keyboard while on a device with a touchsreen. Consider such events as keyboard focus.\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                // When the touchstart event fires the focus event is not yet in the event queue. This means\n                // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n                // see if a focus happens.\n                if (this._touchTimeoutId != null) {\n                    clearTimeout(this._touchTimeoutId);\n                }\n                this._lastTouchTarget = getTarget(event);\n                this._touchTimeoutId = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n            }\n            else if (!this._lastTouchTarget) {\n                this._setOriginForCurrentEventQueue('keyboard');\n            }\n        };\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout(() => this._windowFocused = false);\n        };\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = getTarget(event);\n            const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                handler.call(this, event, element);\n            }\n        };\n        this._document = document;\n        this._detectionMode = (options === null || options === void 0 ? void 0 : options.detectionMode) || 0 /* IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement)\n                .forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOriginForCurrentEventQueue(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    _getFocusOrigin(event) {\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        if (this._origin) {\n            return this._origin;\n        }\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        else if (this._wasCausedByTouch(event)) {\n            return 'touch';\n        }\n        else {\n            return 'program';\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        this._toggleClass(element, 'cdk-focused', !!origin);\n        this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n        this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n        this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n        this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * If the detection mode is 'eventual', the origin is never cleared.\n     * @param origin The origin to set.\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n                // tick after the interaction event fired. To ensure the focus origin is always correct,\n                // the focus origin will be determined at the beginning of the next tick.\n                this._originTimeoutId = setTimeout(() => this._origin = null, 1);\n            }\n        });\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param event The focus event to check.\n     * @returns Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        const focusTarget = getTarget(event);\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== getTarget(event))) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(event), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    _emitOrigin(subject, origin) {\n        this._ngZone.run(() => subject.next(origin));\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const document = this._getDocument();\n                const window = this._getWindow();\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const document = this._getDocument();\n            const window = this._getWindow();\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n}\nFocusMonitor.ɵfac = function FocusMonitor_Factory(t) { return new (t || FocusMonitor)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); };\nFocusMonitor.ɵprov = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8), ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); }, token: FocusMonitor, providedIn: \"root\" });\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_MONITOR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n/** Gets the target of an event, accounting for Shadow DOM. */\nfunction getTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor.monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => this.cdkFocusChange.emit(origin));\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n}\nCdkMonitorFocus.ɵfac = function CdkMonitorFocus_Factory(t) { return new (t || CdkMonitorFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); };\nCdkMonitorFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkMonitorFocus, selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]], outputs: { cdkFocusChange: \"cdkFocusChange\" } });\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkMonitorFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusMonitor }]; }, { cdkFocusChange: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = (documentWindow && documentWindow.getComputedStyle) ?\n            documentWindow.getComputedStyle(testElement) : null;\n        const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n        this._document.body.removeChild(testElement);\n        switch (computedColor) {\n            case 'rgb(0,0,0)': return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)': return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = function HighContrastModeDetector_Factory(t) { return new (t || HighContrastModeDetector)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT)); };\nHighContrastModeDetector.ɵprov = ɵɵdefineInjectable({ factory: function HighContrastModeDetector_Factory() { return new HighContrastModeDetector(ɵɵinject(Platform), ɵɵinject(DOCUMENT)); }, token: HighContrastModeDetector, providedIn: \"root\" });\nHighContrastModeDetector.ctorParameters = () => [\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighContrastModeDetector, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵfac = function A11yModule_Factory(t) { return new (t || A11yModule)(ɵngcc0.ɵɵinject(HighContrastModeDetector)); };\nA11yModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: A11yModule });\nA11yModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule, ObserversModule]] });\nA11yModule.ctorParameters = () => [\n    { type: HighContrastModeDetector }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(A11yModule, { declarations: function () { return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]; }, imports: function () { return [PlatformModule, ObserversModule]; }, exports: function () { return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(A11yModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]\n            }]\n    }], function () { return [{ type: HighContrastModeDetector }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, TOUCH_BUFFER_MS, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, FocusTrapManager as ɵangular_material_src_cdk_a11y_a11y_a, ConfigurableFocusTrapConfig as ɵangular_material_src_cdk_a11y_a11y_b };\n\n//# sourceMappingURL=a11y.js.map","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Optional, Inject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/cdk/collections';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() { }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = (this._itemSize > 0) ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() { return this._itemSize; }\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = element.parentElement);\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // We don't need to keep track of the subscription,\n            // because we complete the `change` stream on destroy.\n            this.change().subscribe(() => this._updateViewportSize());\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n    }\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            ngZone.run(() => this.viewChange.next(this._renderedRange));\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\n            undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode ?\n            getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), (record) => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false\n            },\n            index,\n        };\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n        ])] });\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: _RecycleViewRepeaterStrategy, decorators: [{ type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                providers: [\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: ɵngcc3._RecycleViewRepeaterStrategy, decorators: [{\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }], cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵfac = function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); };\nCdkScrollableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], null, null); })();\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵfac = function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); };\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ], BidiModule, CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule, CdkScrollableModule]; }, exports: function () { return [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('11.2.13');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n//# sourceMappingURL=cdk.js.map\n"]}